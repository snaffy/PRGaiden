<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
image_speed = 0.2; 
grav = 0.2;
hsp = 0;
hsp_carry = 0;
vsp = 0;
movespeed = 7;
jumps = 0;

// zmienne trymajace w ktora strone skierowana jest postac
left = false;
right = true;

// Dotyczny chwytu sciany. 
grab=0
/*grab settings
grab=0:not grabbed on
grab=1:grabbed but not locked in yet
grab=2:locked in
grab=3:can't grab
*/
grab_y=0
grab_side=false
side = 0 ; 
// atak
slash_stand = false;
slash_jump = false;
item_use = false;

jumpsmax = 100;

grounded = true;

jumpspeed_normal = 9;
jumpspeed_powerup = 15;

jumpspeed = jumpspeed_normal


key_down = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get the player's input
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);
key_down = keyboard_check(vk_down);
key_a = keyboard_check_pressed(ord('A'));
key_s = keyboard_check_pressed(ord('S'));

image_speed = 0.2;

//React to inputs

// atak
if(key_a)
 slash_stand = true;
if(key_s)
 {
  item_use = true;
  if(right)
   instance_create(x + 20, y - 45, obj_shur_r_cast);
  else
   instance_create(x - 20, y - 45, obj_shur_r_cast);
 }
move = key_left + key_right;

// w ktora strone idziemy
if(keyboard_check(vk_left))
 {
  left = true;
  right = false;
 }
if(key_right)
 {
 left = false;
 right = true;
 }   
 
if (move &lt; 0 &amp; grounded) 
    {
    sprite_index = player;
    image_xscale = -1 ;
    }else {
    sprite_index = player; 
     image_xscale = 1 ; 
    }  
        
if ( move == 0 &amp;&amp; grounded &amp;&amp; !slash_stand &amp;&amp; !item_use)
 {
  image_speed = 0.0;
  sprite_index = player_stop; 
  if(right)
   image_index = 0
  if(left)
   image_index = 1;
 }

// atak na stojÄ…co
if(slash_stand)
 {
  sprite_index = player_slash;
  
  if(left)
   image_xscale = -1; 
   
  //if(grounded)
  // move = 0;
  
  if(image_index == 2 &amp;&amp; grounded)
   slash_stand = false;
 }
 
if(item_use)
 {
  sprite_index = player_cast;

  if(left)
   image_xscale = -1;
   
  //move = 0;
  
  if(image_index == 2)
   item_use = false;
 }  
 
// skok   
if(!grounded &amp;&amp; !slash_stand &amp;&amp; !item_use)
 sprite_index = player_jump;

// kucanie + atak dziala ale ucina jedna klatke
if(grounded &amp;&amp; key_down)
 {
  sprite_index = player_crouch_slash; 
  if(left)
   image_xscale = -1;
 }

hsp = move * movespeed;

if (vsp &lt; 10) vsp += grav * 2;

if (place_meeting(x,y+1,obj_wall))
{
    jumps = jumpsmax;
}

if ( (key_jump) &amp;&amp; (jumps &gt; 0) )
{
    jumps -= 1;
    vsp = -jumpspeed;
    grounded = true; 
}
// ODBICIE 

if (key_jump)  &amp;&amp; (side=1) &amp;&amp; (place_meeting(x,y,obj_edge)) {
    jumps -= 1;
    grounded = true;
    grab = 0 ; 
    x -= 10;
    y -= jumpspeed;
   }
  
if (key_jump)  &amp;&amp; (side=-1) &amp;&amp; (place_meeting(x,y,obj_edge)) {
    jumps -= 1;
    grounded = true;
    grab = 0 ; 
    x += 10;
    y += jumpspeed;
   }  

var hsp_final
if (grab!=1 &amp;&amp; grab!=2)
{
    hsp_final = hsp + hsp_carry;
    hsp_carry = 0;
} else 
        {
          sprite_index = player_climb;
          if ( side=1) { image_xscale = 1} else {image_xscale = -1}
          hsp_final = 0 ; 
          vsp = 0 ; 
        }


if place_meeting(x+4,y,obj_edge) &amp;&amp; keyboard_check(vk_right) &amp;&amp; grab=0 
{
    grab=1; // chwycil sie 
    side=1; // prawej strony 
}
     
if place_meeting(x-4,y,obj_edge) &amp;&amp; keyboard_check(vk_left) &amp;&amp; grab=0 
{
    grab=1; 
    side=-1 // lewej strony 
} 


// kolizje ***************************************************
//Horizontal Collision
if (place_meeting(x+hsp_final,y,obj_wall))
{
    while(!place_meeting(x+sign(hsp_final),y,obj_wall))
    {
        x += sign(hsp_final);
    }
    hsp_final = 0;
    hsp = 0;
}

if(!slash_stand or !grounded)
 x += hsp_final;
 
//Vertical Collision
if (place_meeting(x,y+vsp * 2,obj_wall))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall))
    {
        y += sign(vsp);
    }
    vsp = 0;
    grounded = true;
}
else
 grounded = false;

y += vsp * 2;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
